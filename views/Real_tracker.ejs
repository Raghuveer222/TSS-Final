<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Route Calculator</title>
    
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>

    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>

    <style>
        #map { height: 500px; width: 100%; margin-top: 10px; }
    </style>
</head>
<body class="bg-gray-100 flex flex-col items-center p-6">
    
    <div class="bg-white shadow-lg rounded-lg p-6 w-full max-w-md">
        <h2 class="text-xl font-bold text-center mb-4">Enter Pickup & Drop Location</h2>
        
        <div class="mb-4">
            <label class="block text-gray-700 font-semibold mb-1">Pickup Location:</label>
            <input id="pickup" type="text" placeholder="Enter pickup location" class="w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
        </div>

        <div class="mb-4">
            <label class="block text-gray-700 font-semibold mb-1">Drop Location:</label>
            <input id="drop" type="text" placeholder="Enter drop location" class="w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
        </div>

        <button onclick="calculateRoute()" class="w-full bg-blue-600 text-white py-2 rounded-md font-semibold hover:bg-blue-700 transition">Calculate Distance</button>
        
        <h3 id="distance" class="text-lg font-semibold text-gray-700 mt-4 text-center"></h3>
        <h3 id="price" class="text-lg font-semibold text-gray-700 text-center"></h3>
    </div>

    <div id="map" class="mt-6 w-full max-w-3xl rounded-lg shadow-md"></div>

    <script>
        var map = L.map('map').setView([20.5937, 78.9629], 5); // Center on India
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);

        var pickupMarker, dropMarker, routeLayer;

        function getCoordinates(address, callback) {
            fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${address}`)
                .then(response => response.json())
                .then(data => {
                    if (data.length > 0) {
                        callback(data[0].lat, data[0].lon);
                    } else {
                        alert("Location not found!");
                    }
                })
                .catch(error => console.error('Error:', error));
        }

        function calculateRoute() {
    const pickup = document.getElementById("pickup").value;
    const drop = document.getElementById("drop").value;

    if (!pickup || !drop) {
        alert("Please enter both locations.");
        return;
    }

    getCoordinates(pickup, (pickupLat, pickupLng) => {
        if (pickupMarker) map.removeLayer(pickupMarker);
        pickupMarker = L.marker([pickupLat, pickupLng]).addTo(map).bindPopup("Pickup").openPopup();

        getCoordinates(drop, (dropLat, dropLng) => {
            if (dropMarker) map.removeLayer(dropMarker);
            dropMarker = L.marker([dropLat, dropLng]).addTo(map).bindPopup("Drop").openPopup();

            fetch("/calculate-route", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ pickupLat, pickupLng, dropLat, dropLng })
            })
            .then(response => response.json())
            .then(data => {
                if (data.distance) {
                    const distance = parseFloat(data.distance); // Ensure it's a number
                    document.getElementById("distance").innerText = `Distance: ${distance.toFixed(2)} km`;

                    // Price calculation logic
                    const baseFare = 20; // Fixed starting fare
                    const costPerKm = 10; // Rate per kilometer
                    const totalPrice = baseFare + (costPerKm * distance);

                    document.getElementById("price").innerText = `Price: â‚¹${totalPrice.toFixed(2)}`;

                    // Display the route on the map
                    if (routeLayer) map.removeLayer(routeLayer);
                    routeLayer = L.polyline(data.route, { color: "blue" }).addTo(map);
                } else {
                    alert("Error calculating distance.");
                }
            })
            .catch(error => {
                alert("Error fetching route.");
                console.error('Error:', error);
            });
        });
    });
}

    </script>

</body>
</html>
